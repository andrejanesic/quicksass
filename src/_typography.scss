/// Creates font and line height helper classes based on the following params:

/// @param {Map} $font-families - Map of typefaces, used to generate font family
/// helper classes
$font-families: (
  sans: (Helvetica, Arial, sans-serif),
  serif: (Georgia, Arial, sans-serif),
  default: sans
) !default;

/// @param {Number} $text-size-base - Cross-device text base size
$text-size-base: 1rem !default;

/// @param {Map} $text-sizes - Matrix for responsive text sizes.
/// Each row corresponds to one breakpoint size, with "null" being the default.
/// One helper class is generated for each given size
$text-sizes: (
  null: (1, 1.2, 1.4, 1.6, 2, 2.8, 4),
  sm: (1, 1.2, 1.4, 1.6, 2, 2.8, 4),
  md: (1, 1.2, 1.4, 1.6, 2, 2.8, 4),
  lg: (1, 1.2, 1.4, 1.6, 2, 2.8, 4),
  xl: (1, 1.2, 1.4, 1.6, 2, 2.8, 4)
) !default;

/// @param {List} $line-height - Line height settings
/// First argument controls whether line height should be set at all.
/// Second argument controls how much the line height property should be
/// incremented, with its base value calculated using parameters
/// @see $text-size-base and @see $text-sizes
$line-height: (true, 0.3rem) !default;

@each $bp in map-keys($text-sizes) {
  $bp-infix: "";
  @if $bp != null {
    $bp-infix: "-#{$bp}";
  }

  $set: map-get($text-sizes, $bp);
  $set-length: length($set);
  @include bp-from($bp) {
    @for $i from $set-length through 1 {
      $val: $text-size-base * nth($set, $i);
      @if $i == 1 {
        .fs#{$bp-infix} { font-size: #{$val}; }
        @if nth($line-height, 1) == true {
          .lh#{$bp-infix} { line-height: #{$val + nth($line-height, 2)}; }
        }
      } @else {
        .fs#{$bp-infix}-#{($set-length - $i) + 1} { font-size: #{$val}; }
        @if nth($line-height, 1) == true {
          .fs#{$bp-infix}-#{($set-length - $i) + 1} { line-height: #{$val + nth($line-height, 2)}; }
        }
      }
    }
  }
}

/// Creates font family helper classes
@each $selector, $family in $font-families {
  @if $selector == "default" {
    html {
      font-family: map-get($font-families, $family);
    }
  } @else {
    .ff-#{$selector} {
      font-family: $family;
    }
  }
}

/// Creates font style helper classes
.italic { font-style: italic; }
.bold   { font-weight: bold; }